from langchain_core.prompts import PromptTemplate
from langchain.chains import LLMChain
from langchain_community.chat_models import ChatOpenAI
from langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler

llm = ChatOpenAI(
    base_url="http://localhost:1234/v1",
    api_key="lm-studio",
    model="mistral",
    streaming=True,
    max_tokens=1250,
    callbacks=[StreamingStdOutCallbackHandler()]
)


template="""
KullanÄ±cÄ±nÄ±n hedefi: {hedef}
KullanÄ±cÄ±nÄ±n sahip olduÄŸu ekipman: {ekipman}
HaftalÄ±k spor gÃ¼nÃ¼: {gun_sayisi}

Bu bilgilere gÃ¶re haftalÄ±k bir egzersiz planÄ± oluÅŸtur.

ğŸ”´ NOTLAR:
- Sadece {gun_sayisi} gÃ¼nlÃ¼k bir plan yaz (fazla gÃ¼n ekleme!)
- HER gÃ¼n iÃ§in tek satÄ±rda KISA ve Ã–ZET yaz: GÃœN: Egzersiz AdÄ± (SÃ¼re veya Set)
- Gereksiz aÃ§Ä±klama, tekrar veya ek not yazma.
- Ã–rneÄŸin:
    Pazartesi: Antrenman tÃ¼rÃ¼ (Ã¶rneÄŸin: aÄŸÄ±rlÄ±k, kardiyo, esneme vb.) ve sÃ¼re (Ã¶rneÄŸin: 30 dakika)
GÃ¼nler: Antrenman tÃ¼rÃ¼ ve sÃ¼re (Ã¶rneÄŸin: 30 dakika)
HaftanÄ±n gÃ¼nlerini rastgele ÅŸekilde seÃ§ebilirsin. (sÄ±ralÄ± olsun)
- CevabÄ±n baÅŸÄ±na veya sonuna ek aÃ§Ä±klama ekleme, sadece plan yaz!
"""




prompt = PromptTemplate(
    input_variables=["hedef", "ekipman", "gun_sayisi"],
    template=template
)

chain = LLMChain(llm=llm, prompt=prompt)

def generate_workout_plan(hedef, ekipman, gun_sayisi):
    return chain.invoke({
        "hedef": hedef,
        "ekipman": ekipman,
        "gun_sayisi": gun_sayisi
    })["text"]
